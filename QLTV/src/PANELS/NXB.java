/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package PANELS;

import DAO.NhaXuatBanDAO;
import java.util.ArrayList;
import java.util.List;
import MODELS.NhaXuatBan;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HAO
 */
public class NXB extends javax.swing.JPanel {

    /**
     * Creates new form NhaXuatBan
     */
    List<NhaXuatBan> listNXB = new ArrayList<NhaXuatBan>();

    public NXB() {
        initComponents();
        loadNXBToTable();
    }

    public void loadNXBToTable() {
        DefaultTableModel model = (DefaultTableModel) tblNXB.getModel();
        model.setRowCount(0);
        NhaXuatBanDAO nxbDao = new NhaXuatBanDAO();
        listNXB = nxbDao.getAll();
        for (NhaXuatBan nxb : listNXB) {
            Object[] row = new Object[]{
                nxb.getMaNXB(), nxb.getTenNXB(), nxb.getDiaChi()
            };
            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblNXB = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtTen = new javax.swing.JTextField();
        btnSua = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();

        tblNXB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã NXB", "Tên NXB", "Địa Chỉ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblNXB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNXBMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblNXB);
        if (tblNXB.getColumnModel().getColumnCount() > 0) {
            tblNXB.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel2.setText("Tên NXB");

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel3.setText("Địa Chỉ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtTen))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 136, Short.MAX_VALUE)
                        .addComponent(btnThem)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(26, 26, 26)
                        .addComponent(txtDiaChi)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa)
                    .addComponent(btnSua))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblNXBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNXBMouseClicked
        NhaXuatBan nxb = listNXB.get(tblNXB.getSelectedRow());
        txtTen.setText(nxb.getTenNXB());
        txtDiaChi.setText(nxb.getDiaChi());
    }//GEN-LAST:event_tblNXBMouseClicked

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            String tenNXB = txtTen.getText().trim();
            String diaChi = txtDiaChi.getText().trim();

            if (tenNXB.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập tên nhà xuất bản!");
                return;
            }
            if (diaChi.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập địa chỉ nhà xuất bản!");
                return;
            }

            NhaXuatBan nxb = new NhaXuatBan();
            nxb.setTenNXB(tenNXB);
            nxb.setDiaChi(diaChi);

            NhaXuatBanDAO nxbDao = new NhaXuatBanDAO();
            int x = nxbDao.themNXB(nxb);

            if (x > 0) {
                JOptionPane.showMessageDialog(this, "Thêm nhà xuất bản mới thành công");
                loadNXBToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm nhà xuất bản mới thất bại");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + e.getMessage());
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int selectedRow = tblNXB.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhà xuất bản để xóa.");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(
                this,
                "Bạn có chắc chắn muốn xóa nhà xuất bản này?",
                "Xác nhận xóa",
                JOptionPane.YES_NO_OPTION
        );

        if (confirm == JOptionPane.YES_OPTION) {
            NhaXuatBan nxb = listNXB.get(selectedRow);
            NhaXuatBanDAO nxbDAO = new NhaXuatBanDAO();
            int x = nxbDAO.xoaNXB(nxb.getMaNXB());
            if (x > 0) {
                JOptionPane.showMessageDialog(this, "Xóa nhà xuất bản thành công");
                loadNXBToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa nhà xuất bản thất bại");
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            int selectedRow = tblNXB.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một nhà xuất bản để cập nhật.");
                return;
            }

            String tenNXB = txtTen.getText().trim();
            String diaChi = txtDiaChi.getText().trim();

            if (tenNXB.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập tên nhà xuất bản!");
                return;
            }
            if (diaChi.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập địa chỉ nhà xuất bản!");
                return;
            }

            NhaXuatBan nxb = listNXB.get(selectedRow);
            nxb.setTenNXB(tenNXB);
            nxb.setDiaChi(diaChi);

            NhaXuatBanDAO nxbDAO = new NhaXuatBanDAO();
            int x = nxbDAO.suaNXB(nxb);

            if (x > 0) {
                JOptionPane.showMessageDialog(this, "Cập nhật nhà xuất bản thành công");
                loadNXBToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Cập nhật nhà xuất bản thất bại");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi cập nhật: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSuaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblNXB;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtTen;
    // End of variables declaration//GEN-END:variables
}
