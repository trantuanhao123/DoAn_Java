/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package PANELS;

import DAO.NhaXuatBanDAO;
import DAO.SachDAO;
import DAO.TheLoaiDAO;
import MODELS.NhaXuatBan;
import MODELS.TheLoai;
import MODELS.SachDTO;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ACER
 */
public class Sach extends javax.swing.JPanel {

    /**
     * Creates new form Sach
     */
    private DefaultTableModel tblModel;
    List<SachDTO> list = new ArrayList<>();
    String imgPath = "";
    private List<TheLoai> listTheLoai;
    private List<NhaXuatBan> listNXB;

    public Sach() {
        initComponents();
        loadTheLoai();
        loadNXB();
        loadDataToTable();
    }

    private void loadDataToTable() {
        try {
            tblModel = (DefaultTableModel) tblSach.getModel();
            tblModel.setRowCount(0);

            SachDAO dao = new SachDAO();
            List<SachDTO> list = dao.GetAllSach();

            for (SachDTO s : list) {
                Object[] newRow = new Object[]{
                    s.getMaSach(),
                    s.getTenSach(),
                    s.getTacGia(),
                    s.getNamXB(),
                    s.getNXB(),
                    s.getTheLoai(),
                    s.getSoLuong(),
                    s.getHinhAnh()
                };
                tblModel.addRow(newRow);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void loadTheLoai() {
        TheLoaiDAO dao = new TheLoaiDAO();
        listTheLoai = dao.getAll();
        cboTheLoai.removeAllItems();
        for (TheLoai tl : listTheLoai) {
            cboTheLoai.addItem(tl.getTen());
        }
    }

    public void loadNXB() {
        NhaXuatBanDAO dao = new NhaXuatBanDAO();
        listNXB = dao.getAll();
        cboNhaXuatBan.removeAllItems();
        for (NhaXuatBan nxb : listNXB) {
            cboNhaXuatBan.addItem(nxb.getTenNXB());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnUploadImage = new javax.swing.JButton();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        cboTheLoai = new javax.swing.JComboBox<>();
        cboNhaXuatBan = new javax.swing.JComboBox<>();
        txtNamXuatBan = new javax.swing.JTextField();
        txtSoLuong = new javax.swing.JTextField();
        txtTenSach = new javax.swing.JTextField();
        txtTacGia = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSach = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        lblHinhAnh = new javax.swing.JLabel();

        jLabel1.setText("Sách");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel2.setText("Tên Sách");

        jLabel3.setText("Thể loại");

        jLabel4.setText("Nhà Xuất Bản");

        jLabel5.setText("Tác Giả");

        jLabel6.setText("Năm Xuất Bản");

        jLabel7.setText("Số lượng");

        jLabel8.setText("Hình Ảnh");

        btnUploadImage.setText("Chọn ảnh");
        btnUploadImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadImageActionPerformed(evt);
            }
        });

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/Repair.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/Delete.png"))); // NOI18N
        btnXoa.setText("Xoá");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        cboTheLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTheLoai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTheLoaiActionPerformed(evt);
            }
        });

        cboNhaXuatBan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(btnThem))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTenSach)
                            .addComponent(cboTheLoai, 0, 144, Short.MAX_VALUE)
                            .addComponent(cboNhaXuatBan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTacGia))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNamXuatBan)
                            .addComponent(txtSoLuong)
                            .addComponent(btnUploadImage, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnSua)
                        .addGap(37, 37, 37)
                        .addComponent(btnXoa)))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnUploadImage, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cboTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cboNhaXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtNamXuatBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnXoa)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã Sách", "Tên Sách", "Tác Giả", "Năm Xuất Bản", "Nhà Xuất Bản", "Thể Loại", "Số Lượng", "Ảnh"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSachMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSach);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        lblHinhAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHinhAnh.setText("Hình ảnh");
        lblHinhAnh.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        lblHinhAnh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblHinhAnh.setVerticalTextPosition(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(378, 378, 378)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboTheLoaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTheLoaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboTheLoaiActionPerformed

    private int getMaTheLoaiByTen(String tenTheLoai) {
        TheLoaiDAO dao = new TheLoaiDAO();
        List<TheLoai> list = dao.getAll();
        for (TheLoai tl : list) {
            if (tl.getTen().equals(tenTheLoai)) {
                return tl.getMa();
            }
        }
        return -1;
    }

    private int getMaNXBByTen(String tenNXB) {
        NhaXuatBanDAO dao = new NhaXuatBanDAO();
        List<NhaXuatBan> list = dao.getAll();
        for (NhaXuatBan nxb : list) {
            if (nxb.getTenNXB().equals(tenNXB)) {
                return nxb.getMaNXB();
            }
        }
        return -1; // hoặc xử lý khác nếu không tìm thấy
    }

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            // 1. Lấy dữ liệu từ form
            String tenSach = txtTenSach.getText().trim();
            String tacGia = txtTacGia.getText().trim();
            String strNamXB = txtNamXuatBan.getText().trim();
            String strSoLuong = txtSoLuong.getText().trim();
            String tenTheLoai = (String) cboTheLoai.getSelectedItem();
            String tenNXB = (String) cboNhaXuatBan.getSelectedItem();

            // 2. Ràng buộc kiểm tra dữ liệu
            if (tenSach.isEmpty() || tacGia.isEmpty() || strNamXB.isEmpty() || strSoLuong.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }

            int namXB;
            int soLuong;

            try {
                namXB = Integer.parseInt(strNamXB);
                if (namXB < 0) {
                    JOptionPane.showMessageDialog(this, "Năm xuất bản không được âm!");
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Năm xuất bản phải là số nguyên!");
                return;
            }

            try {
                soLuong = Integer.parseInt(strSoLuong);
                if (soLuong < 0) {
                    JOptionPane.showMessageDialog(this, "Số lượng không được âm!");
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Số lượng phải là số nguyên!");
                return;
            }

            if (tenTheLoai == null || tenTheLoai.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn thể loại!");
                return;
            }

            if (tenNXB == null || tenNXB.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn nhà xuất bản!");
                return;
            }

            // 3. Lấy mã thể loại và NXB từ tên
            int maTheLoai = getMaTheLoaiByTen(tenTheLoai);
            int maNXB = getMaNXBByTen(tenNXB);

            // 4. Tạo đối tượng sách mới
            SachDTO sachMoi = new SachDTO();
            sachMoi.setTenSach(tenSach);
            sachMoi.setTacGia(tacGia);
            sachMoi.setNamXB(namXB);
            sachMoi.setSoLuong(soLuong);
            sachMoi.setTheLoai(maTheLoai);
            sachMoi.setNXB(maNXB);
            sachMoi.setHinhAnh(imgPath); // Lưu ảnh nếu có

            // 5. Gọi DAO lưu vào CSDL
            SachDAO sachDAO = new SachDAO();
            boolean ketQua = sachDAO.InsertSach(sachMoi);

            if (ketQua) {
                JOptionPane.showMessageDialog(this, "Thêm sách thành công!");
                loadDataToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Thêm sách thất bại!");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void displayImage(String imagePath) {
        if (imagePath != null && !imagePath.isEmpty()) {
            File file = new File("src\\images\\" + imagePath);
            if (file.exists()) {
                ImageIcon imageIcon = new ImageIcon(file.getAbsolutePath());
                Image image = imageIcon.getImage().getScaledInstance(lblHinhAnh.getWidth(), lblHinhAnh.getHeight(), Image.SCALE_SMOOTH);
                lblHinhAnh.setIcon(new ImageIcon(image));
            } else {
                lblHinhAnh.setIcon(null);
            }
        } else {
            lblHinhAnh.setIcon(null);
        }
    }

    private void btnUploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadImageActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        String defaultPath = "src\\Images";
        fileChooser.setCurrentDirectory(new File(defaultPath));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Images", "jpg", "png", "gif", "jpeg");
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            String filePath = fileChooser.getSelectedFile().getAbsolutePath();
            imgPath = fileChooser.getSelectedFile().getName();
            displayImage(imgPath);
        }

    }//GEN-LAST:event_btnUploadImageActionPerformed

    private String getTenTheLoaiByMa(int maTheLoai) {
        if (listTheLoai != null) {
            for (TheLoai tl : listTheLoai) {
                if (tl.getMa() == maTheLoai) { // Sử dụng getMa() thay vì getMaTheLoai()
                    return tl.getTen();
                }
            }
        }
        return "";
    }

    private String getTenNXBByMa(int maNXB) {
        if (listNXB != null) {
            for (NhaXuatBan nxb : listNXB) {
                if (nxb.getMaNXB() == maNXB) {
                    return nxb.getTenNXB();
                }
            }
        }
        return "";
    }

    private void tblSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSachMouseClicked
        int selectedRow = tblSach.getSelectedRow();
        if (selectedRow < 0) {
            return; // Thoát nếu không có hàng nào được chọn
        }

        try {
            // 1. Lấy dữ liệu từ JTable
            String maSachStr = tblSach.getValueAt(selectedRow, 0).toString();
            String tenSach = tblSach.getValueAt(selectedRow, 1).toString();
            String tacGia = tblSach.getValueAt(selectedRow, 2).toString();
            String namXBStr = tblSach.getValueAt(selectedRow, 3).toString();
            String maNXBStr = tblSach.getValueAt(selectedRow, 4).toString();
            String maTheLoaiStr = tblSach.getValueAt(selectedRow, 5).toString();
            String soLuongStr = tblSach.getValueAt(selectedRow, 6).toString();
            String hinhAnh = tblSach.getValueAt(selectedRow, 7) != null ? tblSach.getValueAt(selectedRow, 7).toString() : "";

            // 2. Gán dữ liệu lên form
            txtTenSach.setText(tenSach);
            txtTacGia.setText(tacGia);
            txtNamXuatBan.setText(namXBStr);
            txtSoLuong.setText(soLuongStr);

            // 3. Gán ComboBox
            int maTheLoai = Integer.parseInt(maTheLoaiStr);
            int maNXB = Integer.parseInt(maNXBStr);
            cboTheLoai.setSelectedItem(getTenTheLoaiByMa(maTheLoai));
            cboNhaXuatBan.setSelectedItem(getTenNXBByMa(maNXB));

            // 4. Hiển thị ảnh
            imgPath = hinhAnh; // Lưu đường dẫn ảnh
            if (!hinhAnh.isEmpty()) {
                displayImage(hinhAnh); // Sử dụng hàm displayImage có sẵn
            } else {
                lblHinhAnh.setIcon(null); // Xóa ảnh nếu không có
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Dữ liệu không hợp lệ: " + ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
        }
    }//GEN-LAST:event_tblSachMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        try {
            int selectedRow = tblSach.getSelectedRow();
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một sách để sửa!");
                return;
            }

            String maSachStr = tblSach.getValueAt(selectedRow, 0).toString();
            int maSach = Integer.parseInt(maSachStr);

            String tenSach = txtTenSach.getText().trim();
            String tacGia = txtTacGia.getText().trim();
            String namXBStr = txtNamXuatBan.getText().trim();
            String soLuongStr = txtSoLuong.getText().trim();
            String tenTheLoai = (String) cboTheLoai.getSelectedItem();
            String tenNXB = (String) cboNhaXuatBan.getSelectedItem();

            // Kiểm tra dữ liệu nhập vào
            if (tenSach.isEmpty() || tacGia.isEmpty() || namXBStr.isEmpty() || soLuongStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!");
                return;
            }

            int namXB;
            int soLuong;

            try {
                namXB = Integer.parseInt(namXBStr);
                if (namXB < 0) {
                    JOptionPane.showMessageDialog(this, "Năm xuất bản không được âm!");
                    return;
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Năm xuất bản phải là số nguyên!");
                return;
            }

            try {
                soLuong = Integer.parseInt(soLuongStr);
                if (soLuong < 0) {
                    JOptionPane.showMessageDialog(this, "Số lượng không được âm!");
                    return;
                }
            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Số lượng phải là số nguyên!");
                return;
            }

            if (tenTheLoai == null || tenTheLoai.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn thể loại!");
                return;
            }

            if (tenNXB == null || tenNXB.trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn nhà xuất bản!");
                return;
            }

            int maTheLoai = getMaTheLoaiByTen(tenTheLoai);
            int maNXB = getMaNXBByTen(tenNXB);

            if (maTheLoai == -1 || maNXB == -1) {
                JOptionPane.showMessageDialog(this, "Thể loại hoặc nhà xuất bản không hợp lệ!");
                return;
            }

            // Tạo đối tượng sách và gán dữ liệu
            SachDTO sach = new SachDTO();
            sach.setMaSach(maSach);
            sach.setTenSach(tenSach);
            sach.setTacGia(tacGia);
            sach.setNamXB(namXB);
            sach.setSoLuong(soLuong);
            sach.setTheLoai(maTheLoai);
            sach.setNXB(maNXB);
            sach.setHinhAnh(imgPath); 

            // Gọi DAO để cập nhật
            SachDAO sachDAO = new SachDAO();
            boolean ketQua = sachDAO.UpdateSach(sach);

            if (ketQua) {
                JOptionPane.showMessageDialog(this, "Sửa sách thành công!");
                loadDataToTable();
            } else {
                JOptionPane.showMessageDialog(this, "Sửa sách thất bại!");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        try {
            int selectedRow = tblSach.getSelectedRow();
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn một sách để xóa!", "Lỗi", JOptionPane.WARNING_MESSAGE);
                return;
            }

            String maSachStr = tblSach.getValueAt(selectedRow, 0).toString();
            int maSach = Integer.parseInt(maSachStr);

            int confirm = JOptionPane.showConfirmDialog(this,
                    "Bạn có chắc chắn muốn xóa sách có mã " + maSach + "?",
                    "Xác nhận xóa",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE);
            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }

            SachDAO sachDAO = new SachDAO();
            boolean ketQua = sachDAO.DeleteSach(maSach);

            if (ketQua) {
                JOptionPane.showMessageDialog(this, "Xóa sách thành công!", "Thành công", JOptionPane.INFORMATION_MESSAGE);
                loadDataToTable();

            } else {
                JOptionPane.showMessageDialog(this, "Xóa sách thất bại! Vui lòng kiểm tra lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Mã sách không hợp lệ!", "Lỗi", JOptionPane.WARNING_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Lỗi hệ thống: " + ex.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnXoaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnUploadImage;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboNhaXuatBan;
    private javax.swing.JComboBox<String> cboTheLoai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblHinhAnh;
    private javax.swing.JTable tblSach;
    private javax.swing.JTextField txtNamXuatBan;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTacGia;
    private javax.swing.JTextField txtTenSach;
    // End of variables declaration//GEN-END:variables
}
