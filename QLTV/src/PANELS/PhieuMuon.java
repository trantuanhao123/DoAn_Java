/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package PANELS;

import DAO.phieuDAO;
import DAO.chitietphieuDAO;
import MODELS.ChiTietPhieu;
import MODELS.Phieu;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Kiet
 */
public class PhieuMuon extends javax.swing.JPanel {

    /**
     * Creates new form PhieuMuon
     */
    public PhieuMuon() throws Exception {
        initComponents();
        loadPhieuTable();
        loadChiTietPhieuTable();
    }

    private void loadPhieuTable() throws Exception {
        DefaultTableModel model = (DefaultTableModel) tblPhieu.getModel();
        model.setRowCount(0);
        phieuDAO pdao = new phieuDAO();
        List<Phieu> danhSach = pdao.getAllPhieu();
        for (Phieu p : danhSach) {
            model.addRow(new Object[]{
                p.getMaPhieu(), p.getMaSV(), p.getNgayMuon(), p.getTrangThai(), p.getMaThuThu()
            });
        }
    }

    private void loadChiTietPhieuTable() throws Exception {
        DefaultTableModel model = (DefaultTableModel) tblChiTietPhieu.getModel();
        model.setRowCount(0);
        chitietphieuDAO dpdao = new chitietphieuDAO();
        List<ChiTietPhieu> danhSach = dpdao.getAll();
        for (ChiTietPhieu ct : danhSach) {
            model.addRow(new Object[]{
                ct.getMaPhieu(), ct.getMaSach(), ct.getSoLuongMuon(), ct.getNgayTra()
            });
        }
    }

    private boolean validateInput() {
        if (txtMaPhieu.getText().isEmpty() || txtMaSV.getText().isEmpty()
                || txtNgayMuon.getText().isEmpty() || txtMaThuThu.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin phiếu!");
            return false;
        }
        if (!rbtnDangMuon.isSelected() && !rbtnDaTra.isSelected()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn trạng thái!");
            return false;
        }
        try {
            Integer.parseInt(txtMaPhieu.getText());
            Integer.parseInt(txtMaSV.getText());
            Integer.parseInt(txtMaThuThu.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Mã phiếu, mã SV và mã thủ thư phải là số!");
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        txtNgayMuon = new javax.swing.JTextField();
        txtNgayTra = new javax.swing.JTextField();
        rbtnDangMuon = new javax.swing.JRadioButton();
        rbtnDaTra = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhieu = new javax.swing.JTable();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblChiTietPhieu = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtMaSach = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        txtMaThuThu = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtMaPhieu = new javax.swing.JTextField();

        jLabel1.setText("Mã Sinh Viên:");

        jLabel2.setText("Ngày Mượn:");

        jLabel4.setText("Trạng Thái:");

        jLabel6.setText("Ngày Trả:");

        jLabel7.setText("Mã Thủ Thư:");

        buttonGroup1.add(rbtnDangMuon);
        rbtnDangMuon.setText("Đang Mượn");

        buttonGroup1.add(rbtnDaTra);
        rbtnDaTra.setText("Đã Trả");

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/Add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        tblPhieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Phiếu", "Mã Sinh Viên", "Ngày Mượn", "Trạng Thái", "Mã Thủ Thư"
            }
        ));
        tblPhieu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhieuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhieu);

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/Repair.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMAGES/Delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        tblChiTietPhieu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã Phiếu", " Mã Sách ", "Số Lượng", "Ngày Trả"
            }
        ));
        jScrollPane2.setViewportView(tblChiTietPhieu);

        jLabel5.setText("Mã Sách:");

        jLabel8.setText("Số Lượng:");

        jLabel3.setText("Mã Phiếu");

        txtMaPhieu.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnThem)
                        .addGap(18, 18, 18)
                        .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 19, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNgayTra)
                                    .addComponent(txtMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMaThuThu)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rbtnDangMuon, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(rbtnDaTra, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtSoLuong, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNgayMuon)
                                    .addComponent(txtMaSV, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
                                    .addComponent(txtMaPhieu)))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMaPhieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNgayMuon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNgayTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel4))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rbtnDaTra)
                                    .addComponent(rbtnDangMuon))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(txtMaThuThu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnXoa))
                        .addGap(74, 74, 74))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        if (!validateInput()) {
            return;
        }

        try {
            int maSV = Integer.parseInt(txtMaSV.getText());
            int soLuongMuonMoi = txtSoLuong.getText().isEmpty() ? 0 : Integer.parseInt(txtSoLuong.getText());

            chitietphieuDAO ctDao = new chitietphieuDAO();
            int tongSoLuongDangMuon = ctDao.countBooksBorrowedByStudent(maSV);

            if (tongSoLuongDangMuon + soLuongMuonMoi > 3) {
                JOptionPane.showMessageDialog(this,
                        "Sinh viên này đã mượn " + tongSoLuongDangMuon + " cuốn. Không thể mượn thêm " + soLuongMuonMoi + " cuốn (tối đa 3 cuốn)!");
                return;
            }

            Phieu p = new Phieu();
            p.setMaSV(maSV);
            p.setNgayMuon(txtNgayMuon.getText());
            p.setTrangThai(rbtnDangMuon.isSelected() ? "Đang mượn" : "Đã trả");
            p.setMaThuThu(Integer.parseInt(txtMaThuThu.getText()));

            phieuDAO dao = new phieuDAO();
            dao.insert(p);

            if (soLuongMuonMoi > 0) {
                ChiTietPhieu ct = new ChiTietPhieu();
                ct.setMaPhieu(p.getMaPhieu());
                ct.setMaSach(Integer.parseInt(txtMaSach.getText()));
                ct.setSoLuongMuon(soLuongMuonMoi);

                String ngayTra = txtNgayTra.getText().trim();
                String ngayMuon = txtNgayMuon.getText().trim();
                java.time.LocalDate ngayMuonDate = java.time.LocalDate.parse(ngayMuon);

                if (ngayTra.isEmpty()) {
                    // Tự động gán ngày trả là 7 ngày sau ngày mượn
                    java.time.LocalDate ngayTraAuto = ngayMuonDate.plusDays(7);
                    ct.setNgayTra(ngayTraAuto.toString());
                } else {
                    // Kiểm tra định dạng ngày trả có hợp lệ (yyyy-MM-dd)
                    if (!ngayTra.matches("\\d{4}-\\d{2}-\\d{2}")) {
                        JOptionPane.showMessageDialog(this, "Ngày trả không hợp lệ. Định dạng đúng là yyyy-MM-dd!");
                        return;
                    }

                    java.time.LocalDate ngayTraDate = java.time.LocalDate.parse(ngayTra);
                    long daysBetween = java.time.temporal.ChronoUnit.DAYS.between(ngayMuonDate, ngayTraDate);

                    if (daysBetween > 14) {
                        JOptionPane.showMessageDialog(this, "Không được mượn quá 14 ngày kể từ ngày mượn!");
                        return;
                    }

                    ct.setNgayTra(ngayTra);
                }

                ctDao.insert(ct);
            }

            JOptionPane.showMessageDialog(null, "Thêm phiếu thành công!");
            loadPhieuTable();
            loadChiTietPhieuTable();

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi khi thêm phiếu!");
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblPhieuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhieuMouseClicked
        int row = tblPhieu.getSelectedRow();
        int maPhieu = Integer.parseInt(tblPhieu.getValueAt(row, 0).toString());

        // Gán dữ liệu từ bảng Phieu
        txtMaPhieu.setText(String.valueOf(maPhieu));
        txtMaSV.setText(tblPhieu.getValueAt(row, 1).toString());
        txtNgayMuon.setText(tblPhieu.getValueAt(row, 2).toString());
        txtMaThuThu.setText(tblPhieu.getValueAt(row, 4).toString());

        String trangThai = tblPhieu.getValueAt(row, 3).toString();
        rbtnDangMuon.setSelected(trangThai.equals("Đang mượn"));
        rbtnDaTra.setSelected(trangThai.equals("Đã trả"));

        try {
            loadChiTietPhieuTable();
            chitietphieuDAO dao = new chitietphieuDAO();
            ChiTietPhieu ct = dao.findByMaPhieu(maPhieu);

            if (ct != null) {
                txtMaSach.setText(String.valueOf(ct.getMaSach()));
                txtSoLuong.setText(String.valueOf(ct.getSoLuongMuon()));
                txtNgayTra.setText(ct.getNgayTra());
            }

        } catch (Exception ex) {
            Logger.getLogger(PhieuMuon.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tblPhieuMouseClicked

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if (!validateInput()) {
            return;
        }

        try {
            Phieu p = new Phieu();
            p.setMaPhieu(Integer.parseInt(txtMaPhieu.getText()));
            p.setMaSV(Integer.parseInt(txtMaSV.getText()));
            p.setNgayMuon(txtNgayMuon.getText());
            p.setMaThuThu(Integer.parseInt(txtMaThuThu.getText()));
            p.setTrangThai(rbtnDangMuon.isSelected() ? "Đang mượn" : "Đã trả");

            phieuDAO dao = new phieuDAO();
            dao.update(p);

            ChiTietPhieu ct = new ChiTietPhieu();
            ct.setSoLuongMuon(Integer.parseInt(txtSoLuong.getText()));
            ct.setNgayTra(txtNgayTra.getText());
            ct.setMaPhieu(p.getMaPhieu());
            ct.setMaSach(Integer.parseInt(txtMaSach.getText()));
            chitietphieuDAO ctDao = new chitietphieuDAO();
            ctDao.update(ct);

            JOptionPane.showMessageDialog(null, "Sửa phiếu thành công!");
            loadPhieuTable();
            loadChiTietPhieuTable();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi khi sửa phiếu!");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if (txtMaPhieu.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn phiếu cần xóa!");
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this,
                "Bạn có chắc muốn xóa phiếu này?",
                "Xác nhận xóa",
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                int maPhieu = Integer.parseInt(txtMaPhieu.getText());
                chitietphieuDAO ctDao = new chitietphieuDAO();
                ctDao.deleteByMaPhieu(maPhieu);

                phieuDAO dao = new phieuDAO();
                dao.delete(maPhieu);

                JOptionPane.showMessageDialog(null, "Xóa phiếu thành công!");
                loadPhieuTable();
                txtMaPhieu.setText("");
                txtMaSV.setText("");
                txtNgayMuon.setText("");
                txtMaThuThu.setText("");
                txtMaSach.setText("");
                txtSoLuong.setText("");
                txtNgayTra.setText("");
                rbtnDangMuon.setSelected(false);
                rbtnDaTra.setSelected(false);
                loadChiTietPhieuTable();
            } catch (Exception ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, "Lỗi khi xóa phiếu!");
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rbtnDaTra;
    private javax.swing.JRadioButton rbtnDangMuon;
    private javax.swing.JTable tblChiTietPhieu;
    private javax.swing.JTable tblPhieu;
    private javax.swing.JTextField txtMaPhieu;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtMaSach;
    private javax.swing.JTextField txtMaThuThu;
    private javax.swing.JTextField txtNgayMuon;
    private javax.swing.JTextField txtNgayTra;
    private javax.swing.JTextField txtSoLuong;
    // End of variables declaration//GEN-END:variables
}
